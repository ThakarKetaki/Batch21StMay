package demoForLoopPackage;

public class StarPatternExamples 
{
	public static void main(String[] args) 
	{
		/*         								Row     Star    Space                 
		 * 			*                *         	 1       1	     4
		 * 		   * *              **      	 2		 2	     3
		 * 		  * * *            *** 			 3       3       2
		 * 		 * * * *          ****			 4	     4       1
		 *      * * * * *        *****			 5       5       0
		 * 
		 */
		int Line=6;
		
		for(int i=1;i<=Line;i++)//i=1  1<=5 
		{
			for(int j=Line;j>i;j--) //j=5 5>1 4
			{
				System.out.print(" ");  //space space
			}
			for(int k=1;k<=i;k++)//k=1 1<=1 2
			{
				System.out.print("* ");  //Space is given after star(*) to achieve hollow triangle shape
			}
			System.out.println();
			
		}
		System.out.println("---------------------------------------------------------------------");
		
		
		/*   								Row   Star	Space	
		 *     * * * * *		*****		 1     5  	  0
		 *      * * * *			 ****	     2     4      1
		 *       * * *            ***        3     3      2
		 *        * *              **        4     2      3
		 *         *                *        5     1      4
		 * 
		 */
		
		for(int i=1;i<=Line;i++) //1<=5
		{
			for(int j=Line;j>=i;j--) //j=5  5>1 4 3 2 1
			{
				System.out.print("* "); // *****  //Space is given after star(*) to achieve hollow triangle shape
			}
			System.out.println();
			
			for(int k=1;k<=i;k++) //k=1 1<=1
			{
				System.out.print(" ");
			}
			
		}
		
		
System.out.println("--------------------------------------------------------------------------");
		
		/*         							                 
		 * 			*                Logic
		 * 		   * *            Combination of above both 
		 * 		  * * *            
		 * 		 * * * *      
		 *      * * * * *      1) here downward side triangle is achieve through inverted right side right angle triangle
		 *       * * * *          (console pasun right la ulata triangle) by giving space after * in syso statement
		 *        * * *           So in that we use 1st inner loop for * and 2nd inner loop for space
		 *         * *         2) But when we combined both code(upper triangle and lower triangle)then here to achieve corner 
		 *          *             side logic we us 1st inner loop for space and then 2nd inner loop for *
		 *       	           3) And in 2nd for loop for star we use j>i instead of j>=i
		 */
		for(int i=1;i<=Line;i++)
		{
			for(int j=Line;j>i;j--)
			{
				System.out.print(" ");
			}
			for(int k=1;k<=i;k++)
			{
				System.out.print("* ");  //Space is given after star(*) to achieve hollow triangle shape
			}
			System.out.println();
			
		}
		for(int i=1;i<=Line;i++) 
		{
			
			for(int k=1;k<=i;k++) 
			{
				System.out.print(" ");
			}
			for(int j=Line;j>i;j--) //Here  instead of j>=i we us j>i for connecting two triangle
			{
				System.out.print("* "); //Space is given after star(*) to achieve hollow triangle shape
			}
			System.out.println();
			
		}
		
	
System.out.println("----------------------------------------------------------------------------");
		
		/*					  Star	
		 *          *          1 			     *         	 1       1	     4
		 * 		   ***         3     			**      	 2		 2	     3
		 * 		  *****        5    		   *** 			 3       3       2
		 * 		 *******       7   			  ****			 4	     4       1
		 *      *********      9             *****			 5       5       0
		 *  Here Logic for odd number  is (2*Line number)-1      
		 *  Ex To print 1 star on line 1 (2*1)-1 1  
		 *     To print 3 star on line 2 (2*2)-1 3
		 *     Same Goes On
		 *     This is logic
		 *     The Above Logic is used in Right Side Right Angle Triangle
		 *    
		 * */  
		
		for(int i=1;i<=Line;i++)
		{
			for(int j=Line;j>i;j--)
			{
				System.out.print(" ");
			}
			for(int k=1;k<=2*i-1;k++)
			{
				System.out.print("*");
			}
			System.out.println();
		}
		System.out.println("----------------------------------------------------------------------------");
		/*					   Star								Row		Star	Space				
		 *      *********       9 			     *****         	 1       5	     0
		 * 	     *******        7     			  ****      	 2		 4	     1
		 * 	      *****         5    		       *** 			 3       3       2
		 * 	       ***          3   		        **			 4	     2       3
		 *          *           1            		 *	         5       1		 4
		 *  Here Logic for odd number  is (2*Line number)-1      
		 *  Ex To print 1 star on line 1 (2*1)-1 1  
		 *     To print 3 star on line 2 (2*2)-1 3
		 *     Same Goes On
		 *     This is logic
		 *  The Above Logic is used in inverted Right Side Right Angle Triangle  
		 * */ 
		for(int i=1;i<=Line;i++) //i=1 1<=5 true
		{
			for(int j=Line;j>=2*i-1;j--) //j=5 5>=(2*1-1)
			{
				System.out.print("*"); //5*4*3*2*1*
			}
			System.out.println();//new Line
			for(int k=1;k<=i;k++)//k=1 1<=1
			{
				System.out.print(" "); //1 Space again k++ now k=2 2<=1 false 
			}
		}


		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}
